import{IsolateSerializer as E}from"vestjs-runtime";import{StateMachine as N}from"vest-utils";var t;!function(E){E.Type="$type",E.Keys="keys",E.Key="key",E.Parent="parent",E.Data="data",E.AllowReorder="allowReorder",E.Status="status",E.AbortController="abortController",E.Children="children"}(t||(t={})),new Set([t.AbortController,t.Parent,t.Keys]);const e="PENDING",I="INITIAL",D="DONE",r={[e]:e,[I]:I,[D]:D};N({initial:r.INITIAL,states:{[r.DONE]:{},[r.INITIAL]:{[r.PENDING]:r.PENDING,[r.DONE]:r.DONE},[r.PENDING]:{[r.DONE]:r.DONE}}});const s={[e]:e,CANCELED:"CANCELED",FAILED:"FAILED",OMITTED:"OMITTED",PASSING:"PASSING",SKIPPED:"SKIPPED",UNTESTED:"UNTESTED",WARNING:"WARNING"};N({initial:s.UNTESTED,states:{"*":{[s.OMITTED]:s.OMITTED,RESET:s.UNTESTED},[s.UNTESTED]:{[s.CANCELED]:s.CANCELED,[s.FAILED]:s.FAILED,[s.PASSING]:s.PASSING,[s.PENDING]:s.PENDING,[s.SKIPPED]:s.SKIPPED,[s.WARNING]:s.WARNING},[s.PENDING]:{[s.CANCELED]:s.CANCELED,[s.FAILED]:s.FAILED,[s.PASSING]:s.PASSING,[s.SKIPPED]:[s.SKIPPED,E=>!0===E],[s.WARNING]:s.WARNING},[s.SKIPPED]:{},[s.FAILED]:{},[s.WARNING]:{},[s.PASSING]:{},[s.CANCELED]:{},[s.OMITTED]:{}}});class A{static serialize(N){const t=Object.assign({},N.dump());return E.serialize(t,S)}static deserialize(N){return E.deserialize(N)}static resume(E,N){const t=A.deserialize(N);E.resume(t)}}function S(E,N){if("output"!==N){if(N===t.Status)return i.has(E)?E:void 0;if(!a.has(N))return E}}const i=new Set([s.FAILED,s.PASSING,s.WARNING]),a=new Set(["focusMode","match","matchAll","severity"]);export{A as SuiteSerializer};
//# sourceMappingURL=SuiteSerializer.production.js.map
