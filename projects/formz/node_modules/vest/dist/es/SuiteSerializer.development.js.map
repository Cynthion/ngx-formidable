{"version":3,"file":"SuiteSerializer.development.js","sources":["../../../vestjs-runtime/src/Isolate/IsolateKeys.ts","../../src/core/StateMachines/CommonStateMachine.ts","../../src/core/StateMachines/IsolateTestStateMachine.ts","../../src/exports/SuiteSerializer.ts"],"sourcesContent":["export enum IsolateKeys {\n  Type = '$type',\n  Keys = 'keys',\n  Key = 'key',\n  Parent = 'parent',\n  Data = 'data',\n  AllowReorder = 'allowReorder',\n  Status = 'status',\n  AbortController = 'abortController',\n  Children = 'children',\n}\n\nexport const ExcludedFromDump = new Set([\n  IsolateKeys.AbortController,\n  IsolateKeys.Parent,\n  IsolateKeys.Keys,\n]);\n","import { StateMachine, TStateMachine, ValueOf } from 'vest-utils';\n\nexport const CommonStates = {\n  PENDING: 'PENDING',\n  INITIAL: 'INITIAL',\n  DONE: 'DONE',\n};\n\nconst State = {\n  [CommonStates.PENDING]: CommonStates.PENDING,\n  [CommonStates.INITIAL]: CommonStates.INITIAL,\n  [CommonStates.DONE]: CommonStates.DONE,\n};\n\nexport type State = ValueOf<typeof State>;\n\nconst machine: TStateMachine<State> = {\n  initial: State.INITIAL,\n  states: {\n    [State.DONE]: {},\n    [State.INITIAL]: {\n      [State.PENDING]: State.PENDING,\n      [State.DONE]: State.DONE,\n    },\n    [State.PENDING]: {\n      [State.DONE]: State.DONE,\n    },\n  },\n};\n\nexport const CommonStateMachine = StateMachine<State>(machine);\n","import { StateMachine, TStateMachine, ValueOf } from 'vest-utils';\n\nimport { CommonStates } from 'CommonStateMachine';\n\nexport const TestStatus = {\n  [CommonStates.PENDING]: CommonStates.PENDING,\n  CANCELED: 'CANCELED',\n  FAILED: 'FAILED',\n  OMITTED: 'OMITTED',\n  PASSING: 'PASSING',\n  SKIPPED: 'SKIPPED',\n  UNTESTED: 'UNTESTED',\n  WARNING: 'WARNING',\n};\n\nexport const TestAction = {\n  RESET: 'RESET',\n};\n\nexport type TestStatus = ValueOf<typeof TestStatus>;\nexport type TestAction = ValueOf<typeof TestAction>;\n\nexport type TestStateMachineAction = TestAction | TestStatus;\n\nconst machine: TStateMachine<TestStatus, TestStateMachineAction> = {\n  initial: TestStatus.UNTESTED,\n  states: {\n    '*': {\n      [TestStatus.OMITTED]: TestStatus.OMITTED,\n      [TestAction.RESET]: TestStatus.UNTESTED,\n    },\n    [TestStatus.UNTESTED]: {\n      [TestStatus.CANCELED]: TestStatus.CANCELED,\n      [TestStatus.FAILED]: TestStatus.FAILED,\n\n      [TestStatus.PASSING]: TestStatus.PASSING,\n      [TestStatus.PENDING]: TestStatus.PENDING,\n      [TestStatus.SKIPPED]: TestStatus.SKIPPED,\n      [TestStatus.WARNING]: TestStatus.WARNING,\n    },\n    [TestStatus.PENDING]: {\n      [TestStatus.CANCELED]: TestStatus.CANCELED,\n      [TestStatus.FAILED]: TestStatus.FAILED,\n\n      [TestStatus.PASSING]: TestStatus.PASSING,\n      [TestStatus.SKIPPED]: [\n        TestStatus.SKIPPED,\n        (force?: boolean) => force === true,\n      ],\n      [TestStatus.WARNING]: TestStatus.WARNING,\n    },\n    [TestStatus.SKIPPED]: {},\n    [TestStatus.FAILED]: {},\n    [TestStatus.WARNING]: {},\n    [TestStatus.PASSING]: {},\n    [TestStatus.CANCELED]: {},\n    [TestStatus.OMITTED]: {},\n  },\n};\n\nexport const IsolateTestStateMachine = StateMachine<\n  TestStatus,\n  TestStateMachineAction\n>(machine);\n","import { CB } from 'vest-utils';\nimport { IsolateSerializer } from 'vestjs-runtime';\nimport { IsolateKeys } from 'vestjs-runtime/src/Isolate/IsolateKeys';\n\nimport { TIsolateSuite } from 'IsolateSuite';\nimport { TestStatus } from 'IsolateTestStateMachine';\nimport { TFieldName, TGroupName } from 'SuiteResultTypes';\nimport { Suite } from 'SuiteTypes';\n\nexport type Dumpable = {\n  dump: CB<TIsolateSuite>;\n};\n\nexport class SuiteSerializer {\n  static serialize(suite: Dumpable) {\n    const dump = { ...suite.dump() };\n\n    return IsolateSerializer.serialize(dump, suiteSerializerReplacer);\n  }\n\n  static deserialize(\n    serialized: string | TIsolateSuite | Record<string, any>,\n  ): TIsolateSuite {\n    return IsolateSerializer.deserialize(serialized) as TIsolateSuite;\n  }\n\n  static resume(\n    suite: Suite<TFieldName, TGroupName>,\n    root: string | TIsolateSuite | Record<string, any>,\n  ): void {\n    const suiteRoot = SuiteSerializer.deserialize(root);\n\n    suite.resume(suiteRoot);\n  }\n}\n\nfunction suiteSerializerReplacer(value: any, key: string) {\n  if (key === 'output') {\n    return undefined;\n  }\n\n  if (key === IsolateKeys.Status) {\n    if (AllowedStatuses.has(value)) {\n      return value;\n    }\n\n    return undefined;\n  }\n\n  if (DisallowedKeys.has(key)) {\n    return undefined;\n  }\n\n  return value;\n}\n\nconst AllowedStatuses = new Set([\n  TestStatus.FAILED,\n  TestStatus.PASSING,\n  TestStatus.WARNING,\n]);\n\nconst DisallowedKeys = new Set(['focusMode', 'match', 'matchAll', 'severity']);\n"],"names":["machine"],"mappings":"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"}