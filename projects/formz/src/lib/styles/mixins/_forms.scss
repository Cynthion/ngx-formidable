@use '../tokens' as tokens;
@use 'utils' as utils;

@mixin icon {
  display: inline-flex;
  align-items: center;
  justify-content: center;

  svg {
    width: 100%;
    height: 100%;
    fill: currentColor;
    stroke: currentColor;
    display: block;
  }
}

@mixin legend {
  position: absolute;
  width: utils.spacing(1);
  height: utils.spacing(1);
  padding: 0;
  margin: calc(utils.spacing(1) * -1);
  overflow: hidden;
  clip: rect(0 0 0 0);
  white-space: nowrap;
  border: 0;
}

@mixin field-reset {
  outline: 0;
  hyphens: none;
  appearance: none;
}

@mixin wrapped-input {
  @include field-reset;

  background: transparent;
  width: 100%;
  height: 100%;
  border: none;

  &::selection {
    background-color: var(--formz-color-field-selection, #{tokens.$formz-color-field-selection});
  }

  &::placeholder {
    color: var(--formz-color-field-placeholder, #{tokens.$formz-color-field-placeholder});
  }
}

@mixin field-colors {
  background: var(--formz-color-field-background, #{tokens.$formz-color-field-background});
  color: var(--formz-color-field-text, #{tokens.$formz-color-field-text});
}

@mixin field-group-colors {
  background: var(--formz-color-field-group-background, #{tokens.$formz-color-field-group-background});
  color: var(--formz-color-field-group-text, #{tokens.$formz-color-field-group-text});
}

@mixin field-font {
  font-size: var(--formz-field-font-size, #{tokens.$formz-field-font-size});
  font-weight: var(--formz-field-font-weight, #{tokens.$formz-field-font-weight});
  line-height: var(--formz-field-line-height, #{tokens.$formz-field-line-height});
}

@mixin field-readonly {
  background: var(--formz-color-field-background-readonly, #{tokens.$formz-color-field-background-readonly});
  color: var(--formz-color-field-text-readonly, #{tokens.$formz-color-field-text-readonly});
}

@mixin field-disabled {
  cursor: not-allowed;
  pointer-events: none;

  background: var(--formz-color-field-background-disabled, #{tokens.$formz-color-field-background-disabled});
  color: var(--formz-color-field-text-disabled, #{tokens.$formz-color-field-text-disabled});
}

@mixin field-required {
  background: var(--formz-color-field-background-required, #{tokens.$formz-color-field-background-required});
  color: var(--formz-color-field-text-required, #{tokens.$formz-color-field-text-required});
}

@mixin field-focused {
  border-color: var(--formz-color-field-border-focus, #{tokens.$formz-color-field-border-focus});
  box-shadow: inset 0 0 0 var(--formz-field-border-thickness, #{tokens.$formz-field-border-thickness})
    var(--formz-color-field-border-focus, #{tokens.$formz-color-field-border-focus});
}

@mixin field-group-focused {
  border-color: var(--formz-color-field-group-border-focus, #{tokens.$formz-color-field-group-border-focus});
  box-shadow: inset 0 0 0 var(--formz-field-group-border-thickness, #{tokens.$formz-field-group-border-thickness})
    var(--formz-color-field-group-border-focus, #{tokens.$formz-color-field-group-border-focus});
}

@mixin border {
  border: var(--formz-field-border-thickness, #{tokens.$formz-field-border-thickness}) solid
    var(--formz-color-field-border, #{tokens.$formz-color-field-border});
  border-radius: var(--formz-field-border-radius, #{tokens.$formz-field-border-radius});
}

@mixin border-group {
  border: var(--formz-field-group-border-thickness, #{tokens.$formz-field-group-border-thickness}) solid
    var(--formz-color-field-group-border, #{tokens.$formz-color-field-group-border});
  border-radius: var(--formz-field-group-border-radius, #{tokens.$formz-field-group-border-radius});
}

@mixin field {
  @include field-reset;
  @include border;
  @include field-colors;
  @include field-font;

  width: 100%;
  position: relative;

  &:read-only {
    @include field-readonly;
  }

  &:disabled {
    @include field-disabled;
  }

  &:required {
    @include field-required;
  }

  &:focus {
    @include field-focused;
  }

  &::selection {
    background-color: var(--formz-color-field-selection, #{tokens.$formz-color-field-selection});
  }

  &::placeholder {
    color: var(--formz-color-field-placeholder, #{tokens.$formz-color-field-placeholder});
  }
}

@mixin group-field {
  @include field-reset;
  @include field-font;
  @include border-group;
  @include field-group-colors;

  &:focus {
    @include field-group-focused;
  }

  &:focus-visible {
    @include field-group-focused;
  }
}

@mixin radio-button-group-field {
  @include group-field;
}

@mixin checkbox-group-field {
  @include group-field;
}

@mixin input-field {
  @include field;

  height: var(--formz-field-height, #{tokens.$formz-field-height});
  padding: 0 utils.spacing(16); // horizontal padding only
}

@mixin textarea-field {
  @include input-field;

  min-height: var(--formz-textarea-min-height, #{tokens.$formz-textarea-min-height});
  max-height: var(--formz-textarea-max-height, #{tokens.$formz-textarea-max-height});
  padding-top: var(--formz-textarea-padding-top, #{tokens.$formz-textarea-padding-top});
  resize: vertical;
}

@mixin select-field {
  @include input-field;

  // select field is always read-only, so a reset is needed
  &:read-only {
    @include field-colors;
  }
}

@mixin panel-field {
  @include select-field;
}

@mixin input-wrapper-field {
  &.focused {
    @include field-focused;
  }

  // TODO true?
  // field is always read-only, so a reset is needed
  &:read-only {
    @include field-colors;
  }

  .wrapped-input {
    @include wrapped-input;
  }
}

@mixin dropdown-field {
  @include panel-field;
}

@mixin autocomplete-field {
  @include panel-field;
  @include input-wrapper-field;
}

@mixin date-field {
  @include panel-field;
  @include input-wrapper-field;
}

@mixin time-field {
  @include input-field;

  @include input-wrapper-field;
}

@mixin field-before {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: flex-start;
  margin-bottom: var(--formz-field-before-margin-bottom, #{tokens.$formz-field-before-margin-bottom});
}

@mixin field-label {
  font-size: var(--formz-label-font-size, #{tokens.$formz-label-font-size});
  font-weight: var(--formz-label-font-weight, #{tokens.$formz-label-font-weight});
  line-height: var(--formz-label-line-height, #{tokens.$formz-label-line-height});

  color: var(--formz-color-field-text, #{tokens.$formz-color-field-text});
  pointer-events: none;
  margin-right: utils.spacing(8);

  // animation
  transform: translateY(0);
  transform-origin: left top;
  transition:
    transform var(--formz-animation-duration, #{tokens.$formz-animation-duration})
      var(--formz-animation-easing, #{tokens.$formz-animation-easing}),
    margin-right var(--formz-animation-duration, #{tokens.$formz-animation-duration})
      var(--formz-animation-easing, #{tokens.$formz-animation-easing}),
    font-size var(--formz-animation-duration, #{tokens.$formz-animation-duration})
      var(--formz-animation-easing, #{tokens.$formz-animation-easing}),
    color var(--formz-animation-duration, #{tokens.$formz-animation-duration})
      var(--formz-animation-easing, #{tokens.$formz-animation-easing});
}

@mixin field-label-floating {
  font-size: var(--formz-label-floating-font-size, #{tokens.$formz-label-floating-font-size});
  font-weight: var(--formz-label-floating-font-weight, #{tokens.$formz-label-floating-font-weight});
  line-height: var(--formz-label-floating-line-height, #{tokens.$formz-label-floating-line-height});

  position: absolute;
  left: utils.spacing(16);
  margin-right: 0;
  color: var(--formz-color-field-label-floating, #{tokens.$formz-color-field-label-floating});
  z-index: 1; // keep on top of field

  // animation
  transform: translateY(var(--formz-label-floating-offset, #{tokens.$formz-label-floating-offset})) scale(1);
}

@mixin field-tooltip {
  color: var(--formz-color-field-tooltip, #{tokens.$formz-color-field-tooltip});
}

@mixin field-prefix-single {
  position: absolute;
  top: calc(var(--formz-field-height, #{formz-field-height}) / 2);
  left: 0;
  padding-left: utils.spacing(16);
  padding-right: utils.spacing(16);
  transform: translateY(-50%);
  color: var(--formz-color-field-text, #{tokens.$formz-color-field-text});
  pointer-events: none;
  z-index: 1; // keep on top of field
}

@mixin field-suffix-single {
  position: absolute;
  top: calc(var(--formz-field-height, #{formz-field-height}) / 2);
  right: 0;
  padding-left: utils.spacing(16);
  padding-right: utils.spacing(16);
  color: var(--formz-color-field-text, #{tokens.$formz-color-field-text});
  transform: translateY(-50%);
  pointer-events: none;
  z-index: 1; // keep on top of field
}

@mixin field-prefix-group {
  padding-bottom: utils.spacing(16);
  color: var(--formz-color-field-text, #{tokens.$formz-color-field-text});
}

@mixin field-suffix-group {
  padding-top: utils.spacing(16);
  padding-bottom: utils.spacing(16);
  color: var(--formz-color-field-text, #{tokens.$formz-color-field-text});
}

@mixin field-validation-errors {
  margin-top: utils.spacing(8);
  margin-bottom: utils.spacing(16);
}

@mixin field-validation-error {
  font-size: var(--formz-field-validation-error-font-size, #{tokens.$formz-field-validation-error-font-size});
  font-weight: var(--formz-field-validation-error-font-weight, #{tokens.$formz-field-validation-error-font-weight});
  line-height: var(--formz-field-validation-error-line-height, #{tokens.$formz-field-validation-error-line-height});

  display: block;
  color: var(--formz-color-validation-error, #{tokens.$formz-color-validation-error});
}

@mixin dropdown-trigger {
  display: flex;
  align-items: center;
  justify-content: space-between;
  height: 100%;
  width: 100%;
  cursor: pointer;
  user-select: none;

  .caret {
    float: right;
    transition: transform var(--formz-animation-duration, #{tokens.$formz-animation-duration})
      var(--formz-animation-easing, #{tokens.$formz-animation-easing});
  }

  .caret.rotated {
    transform: rotate(180deg);
  }
}

@mixin panel-left-aligned {
  left: calc(var(--formz-field-border-thickness, #{tokens.$formz-field-border-thickness}) * -1);
  right: unset;
  width: unset;
}

@mixin panel-right-aligned {
  left: unset;
  right: calc(var(--formz-field-border-thickness, #{tokens.$formz-field-border-thickness}) * -1);
  width: unset;
}

@mixin panel-full-aligned {
  @include panel-left-aligned;

  width: calc(100% + 2 * var(--formz-field-border-thickness, #{tokens.$formz-field-border-thickness}));
}

@mixin panel() {
  @include panel-full-aligned;

  &.panel-left {
    @include panel-left-aligned;
  }

  &.panel-right {
    @include panel-right-aligned;
  }

  outline: 0;
  position: absolute;
  box-shadow: var(--formz-panel-box-shadow, #{tokens.$formz-panel-box-shadow});
  border: var(--formz-field-border-thickness, #{tokens.$formz-field-border-thickness}) solid
    var(--formz-color-field-border, #{tokens.$formz-color-field-border});
  border-radius: var(--formz-field-border-radius, #{tokens.$formz-field-border-radius});
  background: var(--formz-panel-background, #{tokens.$formz-panel-background});
  overflow: hidden; // clip inner content to border-radius
  z-index: var(--formz-flyout-z-index, #{tokens.$formz-flyout-z-index}); // keep on top of field

  // scroll
  display: flex;
  flex-direction: column;
  max-height: var(--formz-panel-max-height, #{tokens.$formz-panel-max-height});

  top: calc(100% + var(--formz-field-border-thickness, #{tokens.$formz-field-border-thickness}));

  visibility: hidden;
  pointer-events: none;
  transform: translateY(calc(utils.spacing(4) * -1));

  transition: transform var(--formz-animation-duration, #{tokens.$formz-animation-duration})
    var(--formz-animation-easing, #{tokens.$formz-animation-easing});

  &.open {
    visibility: visible;
    pointer-events: auto;
    transform: translateY(0);
  }

  &.above {
    transform: translateY(calc(-100% - var(--formz-field-height, #{tokens.$formz-field-height})));
  }
}

@mixin panel-scrollcontainer() {
  flex: 1 1 auto;
  overflow-y: auto;
  max-height: 100%;
}

@mixin dropdown-panel() {
  @include panel();
}

@mixin autocomplete-panel() {
  @include panel();
}

@mixin date-panel() {
  // overwrite panel max height
  --formz-panel-max-height: 100vh;

  @include panel();
}

@mixin field-option-disabled {
  cursor: not-allowed;
  pointer-events: auto;

  background: var(--formz-color-field-disabled, #{tokens.$formz-color-field-disabled});
}

@mixin field-option-selected {
  background: var(--formz-color-field-selected, #{tokens.$formz-color-field-selected});
}

@mixin field-option-highlighted {
  background: var(--formz-color-field-highlighted, #{tokens.$formz-color-field-highlighted});
}

@mixin field-option-inline {
  padding: utils.spacing(8) utils.spacing(16);
  color: var(--formz-color-field-text, #{tokens.$formz-color-field-text});

  &:hover {
    background: var(--formz-color-field-hover, #{tokens.$formz-color-field-hovered});
  }
}

@mixin field-option-radio-group {
  @include field-option-inline;

  display: flex;
  align-items: center;

  padding: utils.spacing(8) utils.spacing(16) utils.spacing(8) utils.spacing(0);
}

@mixin field-option-checkbox-group {
  @include field-option-radio-group;
}

@mixin field-option-prefix {
  display: flex;
  align-items: center;
  padding: utils.spacing(0) utils.spacing(16);
}

@mixin checkbox-group-prefix-outer {
  width: var(--formz-option-prefix-dimension-outer, #{tokens.$formz-option-prefix-dimension-outer});
  height: var(--formz-option-prefix-dimension-outer, #{tokens.$formz-option-prefix-dimension-outer});
  border: utils.spacing(2) solid var(--formz-color-option-prefix-outer, #{tokens.$formz-color-option-prefix-outer});
  display: flex;
  align-items: center;
  justify-content: center;
  background: var(--formz-color-option-prefix-background, #{tokens.$formz-color-option-prefix-background});
}

@mixin checkbox-group-prefix-inner {
  width: var(--formz-option-prefix-dimension-inner, #{tokens.$formz-option-prefix-dimension-inner});
  height: var(--formz-option-prefix-dimension-inner, #{tokens.$formz-option-prefix-dimension-inner});
  background: var(--formz-color-option-prefix-inner, #{tokens.$formz-color-option-prefix-inner});
}

@mixin radio-group-prefix-outer {
  @include checkbox-group-prefix-outer;

  border-radius: 50%;
}

@mixin radio-group-prefix-inner {
  @include checkbox-group-prefix-inner;

  border-radius: 50%;
}

@mixin date-picker-wrapper {
  display: flex;
  justify-content: center;

  margin: utils.spacing(16);
}

@mixin toggle-background {
  position: relative;
  cursor: pointer;

  &::before {
    content: '';
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    width: 120%;
    height: 120%;
    border-radius: var(--formz-field-border-radius, #{tokens.$formz-field-border-radius});
  }

  &:hover::before,
  &.open::before {
    opacity: 1;
    background: var(--formz-color-field-hover, #{tokens.$formz-color-field-hovered});
  }
}

@mixin length-indicator {
  position: absolute;
  bottom: utils.spacing(8);

  color: var(--formz-color-length-indicator, #{tokens.$formz-color-length-indicator});
  pointer-events: none;
  user-select: none;

  font-size: var(--formz-length-indicator-font-size, #{tokens.$formz-length-indicator-font-size});
  font-weight: var(--formz-length-indicator-font-weight, #{tokens.$formz-length-indicator-font-weight});
  line-height: var(--formz-length-indicator-line-height, #{tokens.$formz-length-indicator-line-height});
}
